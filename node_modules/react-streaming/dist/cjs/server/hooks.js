"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useStreamOptional = exports.useStream = exports.useAsync = void 0;
var useAsync_1 = require("./useAsync");
Object.defineProperty(exports, "useAsync", { enumerable: true, get: function () { return useAsync_1.useAsync; } });
var useStream_1 = require("./useStream");
Object.defineProperty(exports, "useStream", { enumerable: true, get: function () { return useStream_1.useStream; } });
var useStream_2 = require("./useStream");
Object.defineProperty(exports, "useStreamOptional", { enumerable: true, get: function () { return useStream_2.useStreamOptional; } });
// We don't import from ./utils.ts because utils/debug.js contains a !isBrowser() assertion
const assert_1 = require("../utils/assert");
const isBrowser_1 = require("../utils/isBrowser");
(0, assert_1.assertUsage)(!(0, isBrowser_1.isBrowser)(), "The file node_modules/react-streaming/dist/{esm,cjs}/server/hooks.js is loaded in the browser but it shouldn't. Make sure to never `import { something } from 'react-streaming/server'` in code that runs on the client-side. Also make sure your bundler picks the right node_modules/react-streaming/package.json#exports entries.");
