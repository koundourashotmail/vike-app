/// <reference types="node" />
export { createPipeWrapper };
export type { Pipe };
import type { Writable as StreamNodeWritable } from 'stream';
import { type DoNotClosePromise } from './orchestrateChunks';
import type { ClearTimeouts } from '../renderToStream';
declare type Pipe = (writable: StreamNodeWritable) => void;
declare function createPipeWrapper(pipeFromReact: Pipe, onReactBug: (err: unknown) => void, clearTimeouts: ClearTimeouts, doNotClosePromise: DoNotClosePromise): Promise<{
    pipeForUser: Pipe;
    streamEnd: Promise<void>;
    injectToStream: import("./orchestrateChunks").InjectToStream;
    hasStreamEnded: () => boolean;
}>;
