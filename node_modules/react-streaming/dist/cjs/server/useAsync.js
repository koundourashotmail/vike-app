"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAsync = void 0;
const react_1 = require("react");
const useStream_1 = require("./useStream");
const utils_1 = require("./utils");
const stringify_1 = require("@brillout/json-serializer/stringify");
const initData_1 = require("../shared/initData");
const useSuspense_1 = require("../shared/useSuspense");
const key_1 = require("../shared/key");
const useSuspenseData_1 = require("./useAsync/useSuspenseData");
function useAsync(keyValue, asyncFn) {
    (0, key_1.assertKey)(keyValue);
    const key = (0, key_1.stringifyKey)(keyValue);
    const elementId = (0, react_1.useId)();
    const streamUtils = (0, useStream_1.useStream)();
    (0, utils_1.assert)(streamUtils);
    const resolver = async () => {
        const value = await asyncFn();
        provideInitData(streamUtils, { key, value, elementId });
        return value;
    };
    const suspenses = (0, useSuspenseData_1.useSuspenseData)();
    (0, utils_1.assert)(suspenses);
    return (0, useSuspense_1.useSuspense)({ suspenses, resolver, key, elementId, asyncFnName: asyncFn.name });
}
exports.useAsync = useAsync;
// See consumer getInitData()
function provideInitData(streamUtils, initData) {
    const initDataSerialized = (0, stringify_1.stringify)(initData);
    const initDataInjection = `<script class="${initData_1.initDataHtmlClass}" type="application/json">${initDataSerialized}</script>`;
    streamUtils.injectToStream(initDataInjection);
}
